{
glyphname = Y.ss03;
lastChange = "2022-06-02 01:38:06 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (931,0);
},
{
name = top;
pos = (931,668);
},
{
name = topleft;
pos = (75,600);
}
);
background = {
shapes = (
{
closed = 1;
nodes = (
(812,245,o),
(860,327,o),
(888,385,c),
(850,280,o),
(798,157,o),
(722,26,c),
(615,-6,o),
(469,-64,o),
(392,-115,cs),
(276,-190,o),
(239,-263,o),
(253,-315,cs),
(267,-367,o),
(332,-399,o),
(421,-387,cs),
(540,-371,o),
(624,-320,o),
(688,-246,cs),
(752,-172,o),
(796,-78,o),
(833,25,c),
(865,33,ls),
(912,47,o),
(920,65,o),
(875,61,cs),
(844,56,l),
(868,126,o),
(906,251,o),
(931,321,cs),
(962,408,o),
(996,488,o),
(1043,556,cs),
(1082,614,o),
(1130,664,o),
(1194,631,cs),
(1220,618,o),
(1192,678,o),
(1144,678,cs),
(1111,678,o),
(1071,668,o),
(1024,631,cs),
(977,594,o),
(924,532,o),
(864,428,cs),
(844,395,o),
(807,330,o),
(782,288,cs),
(751,236,o),
(718,182,o),
(689,138,cs),
(667,104,o),
(615,46,o),
(589,46,cs),
(541,46,o),
(569,138,o),
(597,196,cs),
(638,280,o),
(727,438,o),
(757,501,cs),
(809,605,o),
(777,666,o),
(616,666,cs),
(536,666,o),
(431,631,o),
(332,576,cs),
(233,520,o),
(143,444,o),
(94,363,cs),
(67,322,o),
(59,284,o),
(56,245,cs),
(52,177,o),
(96,141,o),
(156,141,cs),
(192,140,o),
(234,152,o),
(273,176,c),
(286,183,o),
(290,205,o),
(278,200,cs),
(265,195,o),
(242,187,o),
(221,187,cs),
(178,187,o),
(164,216,o),
(167,253,cs),
(175,398,o),
(360,542,o),
(487,597,cs),
(567,630,o),
(674,639,o),
(640,552,cs),
(627,521,o),
(589,456,o),
(562,407,cs),
(528,346,o),
(491,278,o),
(470,215,cs),
(414,55,o),
(472,-33,o),
(579,-5,cs),
(656,14,o),
(726,106,o),
(780,194,cs)
);
},
{
closed = 1;
nodes = (
(320,-335,o),
(297,-324,o),
(300,-297,c),
(300,-256,o),
(349,-202,o),
(390,-169,cs),
(474,-101,o),
(588,-51,o),
(696,-15,c),
(651,-87,o),
(600,-155,o),
(545,-209,cs),
(489,-263,o),
(429,-303,o),
(365,-320,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(880,364,l),
(843,264,o),
(793,148,o),
(722,26,c),
(615,-6,o),
(469,-64,o),
(392,-115,cs),
(306,-171,o),
(251,-235,o),
(250,-291,cs),
(249,-357,o),
(316,-390,o),
(387,-390,cs),
(457,-390,o),
(592,-357,o),
(688,-246,cs),
(752,-172,o),
(796,-78,o),
(833,25,c),
(875,36,ls),
(895,41,o),
(904,48,o),
(904,55,cs),
(904,62,o),
(895,65,o),
(879,62,cs),
(844,56,l),
(868,126,o),
(906,251,o),
(931,321,cs),
(962,408,o),
(996,488,o),
(1043,556,cs),
(1074,601,o),
(1109,642,o),
(1154,642,cs),
(1167,642,o),
(1176,639,o),
(1183,636,cs),
(1194,631,o),
(1197,629,o),
(1200,629,cs),
(1203,629,o),
(1204,631,o),
(1204,634,cs),
(1204,647,o),
(1185,678,o),
(1144,678,cs),
(1087,678,o),
(1033,648,o),
(974,584,cs),
(917,520,o),
(856,423,o),
(782,288,cs),
(681,103,o),
(619,46,o),
(589,46,cs),
(570,46,o),
(563,60,o),
(563,80,cs),
(563,134,o),
(613,231,o),
(665,327,cs),
(722,430,o),
(780,532,o),
(780,579,cs),
(780,632,o),
(737,666,o),
(617,666,cs),
(508,666,o),
(355,599,o),
(250,523,cs),
(137,441,o),
(55,338,o),
(55,240,cs),
(55,172,o),
(101,140,o),
(161,140,cs),
(199,140,o),
(239,150,o),
(270,172,cs),
(281,180,o),
(287,188,o),
(287,196,cs),
(287,199,o),
(286,202,o),
(283,202,cs),
(278,202,o),
(250,187,o),
(223,187,cs),
(187,187,o),
(167,204,o),
(167,249,cs),
(167,318,o),
(224,411,o),
(310,485,cs),
(397,560,o),
(508,621,o),
(590,621,cs),
(625,621,o),
(647,605,o),
(647,579,cs),
(647,544,o),
(587,456,o),
(532,355,cs),
(489,273,o),
(449,183,o),
(448,106,cs),
(447,31,o),
(484,-11,o),
(543,-10,cs),
(646,-9,o),
(728,109,o),
(780,194,cs),
(809,239,o),
(849,309,o),
(878,365,c)
);
},
{
closed = 1;
nodes = (
(608,-149,o),
(542,-212,cs),
(476,-274,o),
(375,-327,o),
(331,-327,cs),
(311,-327,o),
(300,-318,o),
(300,-300,cs),
(300,-264,o),
(335,-213,o),
(390,-169,cs),
(474,-101,o),
(588,-51,o),
(696,-15,c),
(658,-75,o)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
25 9 42 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 11 values pushed */
6 25 22 25 38 25 54 25 70 25 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 949;
}
);
note = Y;
}
