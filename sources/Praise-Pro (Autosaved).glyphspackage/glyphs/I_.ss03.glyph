{
color = 11;
glyphname = I.ss03;
lastChange = "2022-04-18 02:42:57 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (135,-60);
},
{
name = ogonek;
pos = (168,-36);
},
{
name = top;
pos = (456,600);
},
{
name = topleft;
pos = (20,600);
}
);
background = {
shapes = (
{
closed = 1;
nodes = (
(483.333,536,o),
(485,540,o),
(481,544,c),
(520,544,ls),
(558.667,544,o),
(590.333,551.333,o),
(613,562,cs),
(624.998,568,o),
(633.656,584,o),
(617,584,cs),
(569,581.333,o),
(529.167,587,o),
(488.5,595,cs),
(457.05,601.187,o),
(394.344,616.793,o),
(354,623,cs),
(197.327,652.952,o),
(120.357,613.211,o),
(130,520,c),
(171.466,547.644,o),
(271.407,552.351,o),
(349,550,c),
(302.333,532.667,o),
(271,491.667,o),
(239,441,cs),
(227,422.333,o),
(209.167,386.333,o),
(188.5,341,cs),
(178.167,318.333,o),
(167.667,294.167,o),
(157,268.5,cs),
(135.667,217.167,o),
(118,164.167,o),
(106,115.5,cs),
(100,91.167,o),
(96.333,69.333,o),
(95,50,cs),
(93.667,40.667,o),
(93.667,32.667,o),
(95,26,c),
(8.708,34.351,o),
(-48.95,23.752,o),
(-33,-56,c),
(-12.79,-41.565,o),
(63.511,-22,o),
(104,-22,c),
(118.667,-60.667,o),
(152.667,-75,o),
(202,-75,cs),
(239.333,-75,o),
(275.667,-63.333,o),
(313,-42,cs),
(335.378,-28.573,o),
(326.632,-10,o),
(314,-10,c),
(242,0,ls),
(238.667,0.667,o),
(234,1.5,o),
(228,2.5,cs),
(208,6,l),
(208,8.667,o),
(208,11.333,o),
(208,14,cs),
(209,23,ls),
(213,64.333,o),
(235.333,128.667,o),
(266,198,cs),
(281.333,232.667,o),
(298.5,267.833,o),
(317.5,303.5,cs),
(355.5,374.833,o),
(394.167,438.667,o),
(429.5,484,cs),
(447.167,506.667,o),
(462.667,522.667,o),
(476,532,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(239.333,-75,o),
(275.667,-63.333,o),
(313,-42,cs),
(323,-36,o),
(327,-29,o),
(327,-23,cs),
(327,-16,o),
(321,-10,o),
(314,-10,c),
(242,0,l),
(208,6,l),
(208,14,l),
(209,23,ls),
(214,64,o),
(235.333,128.667,o),
(266,198,cs),
(281.333,232.667,o),
(298.5,267.833,o),
(317.5,303.5,cs),
(355.5,374.833,o),
(394.167,438.667,o),
(429.5,484,cs),
(447.167,506.667,o),
(462.667,522.667,o),
(476,532,cs),
(481,535,o),
(483,537,o),
(483,540,cs),
(483,541,o),
(482,543,o),
(481,544,c),
(520,544,ls),
(558.667,544,o),
(590.333,551.333,o),
(613,562,cs),
(620,566,o),
(626,573,o),
(626,578,cs),
(626,581,o),
(624,584,o),
(617,584,cs),
(569,581.333,o),
(529.167,587,o),
(488.5,595,cs),
(457.05,601.187,o),
(394.344,616.793,o),
(354,623,cs),
(320,629,o),
(289,633,o),
(263,633,cs),
(174,633,o),
(129,598,o),
(129,535,cs),
(129,530,o),
(129,525,o),
(130,520,c),
(166,544,o),
(244,551,o),
(314,551,cs),
(326,551,o),
(338,550,o),
(349,550,c),
(302.333,532.667,o),
(271,491.667,o),
(239,441,cs),
(227,422.333,o),
(209.167,386.333,o),
(188.5,341,cs),
(178.167,318.333,o),
(167.667,294.167,o),
(157,268.5,cs),
(135.667,217.167,o),
(118,164.167,o),
(106,115.5,cs),
(99,86,o),
(94,59,o),
(94,37,cs),
(94,33,o),
(94,29,o),
(95,26,c),
(80,27,o),
(65,28,o),
(52,28,cs),
(-1,28,o),
(-36,15,o),
(-36,-32,cs),
(-36,-39,o),
(-35,-47,o),
(-33,-56,c),
(-12.79,-41.565,o),
(63.511,-22,o),
(104,-22,c),
(118.667,-60.667,o),
(152.667,-75,o),
(202,-75,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
62 1 47 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
30 22 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = I;
}
