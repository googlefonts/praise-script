{
color = 11;
glyphname = D.ss02;
lastChange = "2022-04-18 02:41:09 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = center;
pos = (165,300);
},
{
name = top;
pos = (452,600);
}
);
background = {
shapes = (
{
closed = 1;
nodes = (
(142,-28,o),
(147,-25,o),
(147,-21,cs),
(147,-19,o),
(146,-17,o),
(144,-15,cs),
(141,-12,o),
(140,-6,o),
(140,1,cs),
(140,17,o),
(145,41,o),
(151.5,63.5,cs),
(162.833,104.167,o),
(181,156.333,o),
(205,211,cs),
(240.896,298.496,o),
(336.476,431.345,o),
(377,482,cs),
(391,500,o),
(402,508,o),
(410,508,cs),
(420,508,o),
(425,492,o),
(423,466,cs),
(414.831,357.077,o),
(343.091,181.88,o),
(275,92,cs),
(254,65,o),
(227,40,o),
(200,40,cs),
(188,40,o),
(177,44,o),
(167,54,cs),
(165,56,o),
(162.667,54.167,o),
(160,48.5,cs),
(157.333,42.833,o),
(159.667,34.667,o),
(167,24,cs),
(174.525,11.459,o),
(210.55,0,o),
(225,0,cs),
(289,0,o),
(354.333,50.833,o),
(409,123.5,cs),
(436.333,159.833,o),
(460.5,200,o),
(481.5,244,cs),
(520,324,o),
(541,402,o),
(541,468,cs),
(541,511,o),
(531,544,o),
(508,564,cs),
(492,578,o),
(464,589,o),
(443,589,cs),
(432,589,o),
(423,586,o),
(417,580,cs),
(384.522,547.522,o),
(312.461,438.249,o),
(276,379,c),
(304,443,o),
(331.333,498.333,o),
(350,537,cs),
(355,547,o),
(357,555,o),
(357,563,cs),
(357,584,o),
(341,597,o),
(320,604,cs),
(288,613.333,o),
(252.333,616,o),
(223,616,cs),
(206,616,o),
(198,612,o),
(198,605,cs),
(198,602,o),
(200,600,o),
(204,599,cs),
(216,594,o),
(220,582,o),
(220,565,cs),
(220,518,o),
(180,432,o),
(147,365,cs),
(128.333,326.333,o),
(105.667,276.833,o),
(87,225.5,cs),
(77.667,199.833,o),
(69.333,174.667,o),
(62,150,cs),
(53,120,o),
(47,88,o),
(47,61,cs),
(47,30,o),
(55,5,o),
(76,-5,cs),
(84.039,-9.823,o),
(130.063,-21.531,o),
(135,-24,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(142,-28,o),
(147,-25,o),
(147,-21,cs),
(147,-19,o),
(146,-17,o),
(144,-15,cs),
(141,-12,o),
(140,-6,o),
(140,1,cs),
(140,17,o),
(145,41,o),
(151.5,63.5,cs),
(162.833,104.167,o),
(181,156.333,o),
(205,211,cs),
(240.896,298.496,o),
(336.476,431.345,o),
(377,482,cs),
(391,500,o),
(402,508,o),
(410,508,cs),
(420,508,o),
(425,492,o),
(423,466,cs),
(414.831,357.077,o),
(343.091,181.88,o),
(275,92,cs),
(254,65,o),
(227,40,o),
(200,40,cs),
(188,40,o),
(177,44,o),
(167,54,cs),
(165,56,o),
(162.667,54.167,o),
(160,48.5,cs),
(157.333,42.833,o),
(159.667,34.667,o),
(167,24,cs),
(174.525,11.459,o),
(210.55,0,o),
(225,0,cs),
(289,0,o),
(354.333,50.833,o),
(409,123.5,cs),
(436.333,159.833,o),
(460.5,200,o),
(481.5,244,cs),
(520,324,o),
(541,402,o),
(541,468,cs),
(541,511,o),
(531,544,o),
(508,564,cs),
(492,578,o),
(464,589,o),
(443,589,cs),
(432,589,o),
(423,586,o),
(417,580,cs),
(384.522,547.522,o),
(312.461,438.249,o),
(276,379,c),
(304,443,o),
(331.333,498.333,o),
(350,537,cs),
(355,547,o),
(357,555,o),
(357,563,cs),
(357,584,o),
(341,597,o),
(320,604,cs),
(288,613.333,o),
(252.333,616,o),
(223,616,cs),
(206,616,o),
(198,612,o),
(198,605,cs),
(198,602,o),
(200,600,o),
(204,599,cs),
(216,594,o),
(220,582,o),
(220,565,cs),
(220,518,o),
(180,432,o),
(147,365,cs),
(128.333,326.333,o),
(105.667,276.833,o),
(87,225.5,cs),
(77.667,199.833,o),
(69.333,174.667,o),
(62,150,cs),
(53,120,o),
(47,88,o),
(47,61,cs),
(47,30,o),
(55,5,o),
(76,-5,cs),
(84.039,-9.823,o),
(130.063,-21.531,o),
(135,-24,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
61 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
72 46 61 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 475;
}
);
note = D;
}
