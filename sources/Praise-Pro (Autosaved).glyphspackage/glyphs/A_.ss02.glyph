{
color = 11;
glyphname = A.ss02;
lastChange = "2022-04-18 02:41:09 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = ogonek;
pos = (448,10);
},
{
name = top;
pos = (618,600);
}
);
background = {
shapes = (
{
closed = 1;
nodes = (
(476,-17,o),
(479,-14,o),
(479,-11,cs),
(479,-9,o),
(478,-7,o),
(476,-5,cs),
(471,1,o),
(468,13,o),
(468,29,cs),
(468,77,o),
(489,160,o),
(508,226,c),
(527.333,224.667,o),
(538.333,222.667,o),
(541,220,cs),
(551.158,212.381,o),
(552,229.917,o),
(552,239,cs),
(552,243.667,o),
(549,247.667,o),
(543,251,cs),
(537,254.333,o),
(529,257.667,o),
(519,261,c),
(553.513,377.48,o),
(622.182,551.182,o),
(658,587,cs),
(661,590,o),
(662,592,o),
(662,594,cs),
(662,602,o),
(644,606,o),
(622,606,cs),
(566,606,o),
(536,590,o),
(513,556,c),
(407,443,ls),
(368.378,402.107,o),
(298.223,329.388,o),
(256,285,c),
(228.667,285,o),
(205.167,284.5,o),
(185.5,283.5,cs),
(165.833,282.5,o),
(152.667,281.333,o),
(146,280,cs),
(104.667,270.667,o),
(88.667,263.333,o),
(74,238,cs),
(70,231,o),
(67,224,o),
(67,219,cs),
(67,218,o),
(67,217,o),
(67.5,216,c),
(68,211,o),
(71,208,o),
(74,208,cs),
(75,208,ls),
(87,210.667,o),
(113.333,214.333,o),
(148,217,c),
(162.667,219.667,o),
(179,220.667,o),
(195,222,c),
(125.205,150.152,o),
(22.778,48.788,o),
(-8,32,cs),
(-12,30,o),
(-14,27,o),
(-14,24,cs),
(-14,10,o),
(37,-5,o),
(79,-5,cs),
(134,-5,o),
(161,28,o),
(201,80,cs),
(207,88,o),
(219.333,105.667,o),
(238,133,cs),
(303,229,l),
(323,230,o),
(343,231,o),
(364,231,cs),
(375,231,o),
(385,230,o),
(396,230,c),
(385,183,o),
(377,134,o),
(377,93,cs),
(377,42,o),
(389,3,o),
(425,-6,cs),
(431.667,-8,o),
(439.333,-9.333,o),
(448,-10,cs),
(456.667,-10.667,o),
(463.667,-12,o),
(469,-14,cs)
);
},
{
closed = 1;
nodes = (
(396.667,279.333,o),
(385.167,280.333,o),
(373.5,281,cs),
(339,283,l),
(385.667,351,o),
(435,423,o),
(475,479,c),
(457.667,436.333,o),
(430.667,359.333,o),
(408,278,c)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(476,-17,o),
(479,-14,o),
(479,-11,cs),
(479,-9,o),
(478,-7,o),
(476,-5,cs),
(471,1,o),
(468,13,o),
(468,29,cs),
(468,77,o),
(489,160,o),
(508,226,c),
(527.333,224.667,o),
(538.333,222.667,o),
(541,220,cs),
(551.158,212.381,o),
(552,229.917,o),
(552,239,cs),
(552,243.667,o),
(549,247.667,o),
(543,251,cs),
(537,254.333,o),
(529,257.667,o),
(519,261,c),
(553.513,377.48,o),
(622.182,551.182,o),
(658,587,cs),
(661,590,o),
(662,592,o),
(662,594,cs),
(662,602,o),
(644,606,o),
(622,606,cs),
(566,606,o),
(536,590,o),
(513,556,c),
(407,443,ls),
(369,402,o),
(298.223,329.388,o),
(256,285,c),
(228.667,285,o),
(205.167,284.5,o),
(185.5,283.5,cs),
(165.833,282.5,o),
(152.667,281.333,o),
(146,280,cs),
(104.667,270.667,o),
(88.667,263.333,o),
(74,238,cs),
(70,231,o),
(67,224,o),
(67,219,cs),
(67,218,o),
(67,217,o),
(67.5,216,c),
(68,211,o),
(71,208,o),
(74,208,cs),
(75,208,ls),
(87,208,o),
(113.333,214.333,o),
(148,217,c),
(162.667,219.667,o),
(179,220.667,o),
(195,222,c),
(125.205,150.152,o),
(22.778,48.788,o),
(-8,32,cs),
(-12,30,o),
(-14,27,o),
(-14,24,cs),
(-14,10,o),
(37,-5,o),
(79,-5,cs),
(134,-5,o),
(161,28,o),
(201,80,cs),
(207,88,o),
(219,106,o),
(238,133,cs),
(303,229,l),
(323,230,o),
(343,231,o),
(364,231,cs),
(375,231,o),
(385,230,o),
(396,230,c),
(385,183,o),
(377,134,o),
(377,93,cs),
(377,42,o),
(389,3,o),
(425,-6,cs),
(431.667,-8,o),
(439.333,-9.333,o),
(448,-10,cs),
(456.667,-10.667,o),
(463.667,-12,o),
(469,-14,cs)
);
},
{
closed = 1;
nodes = (
(396.667,279.333,o),
(385.167,280.333,o),
(373.5,281,cs),
(339,283,l),
(385.667,351,o),
(435,423,o),
(475,479,c),
(457.667,436.333,o),
(430.667,359.333,o),
(408,278,c)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 532;
}
);
note = A;
}
