{
glyphname = u.ss04;
lastChange = "2022-06-01 21:37:59 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (175,0);
},
{
name = ogonek;
pos = (318,10);
},
{
name = top;
pos = (300,425);
},
{
name = topright;
pos = (349,425);
}
);
background = {
shapes = (
{
closed = 1;
nodes = (
(339,-6,o),
(373,13.667,o),
(403,53,cs),
(437.667,98.333,o),
(464.333,152,o),
(491,204,cs),
(498.776,216.96,o),
(475.739,231.478,o),
(468,216,cs),
(451.607,187.313,o),
(427.111,136.07,o),
(403,101,cs),
(380.333,67.667,o),
(355.667,40,o),
(337,40,cs),
(305.292,40,o),
(328.578,110.734,o),
(337,136,cs),
(344.319,159.421,o),
(404.196,292.654,o),
(413,322,cs),
(430.443,374.329,o),
(404.822,421.909,o),
(323,431,cs),
(313,431.667,o),
(310.333,429.333,o),
(315,424,c),
(325.3,408.55,o),
(309.297,359.168,o),
(299,336,cs),
(267,256,o),
(230.333,174,o),
(173,102,cs),
(152.815,77.779,o),
(132.518,89.651,o),
(143,119,cs),
(155,153.667,o),
(169.833,187,o),
(187.5,219,cs),
(205.167,251,o),
(220.667,285.333,o),
(234,322,cs),
(251.443,374.329,o),
(225.822,421.909,o),
(144,431,cs),
(134,431.667,o),
(131.333,429.333,o),
(136,424,c),
(146.555,408.167,o),
(121.193,344.933,o),
(111,322,cs),
(81.535,249.975,o),
(19,125.39,o),
(19,68,cs),
(19,28.667,o),
(39,5.667,o),
(79,-1,cs),
(125.667,-7.667,o),
(166,37.333,o),
(202,92,cs),
(208.667,102.667,o),
(217,116.333,o),
(225,131,c),
(211.64,56.184,o),
(229.093,-6,o),
(301,-6,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(222,115,o),
(221,101,o),
(221,88,cs),
(221,27,o),
(251,-6,o),
(298,-6,cs),
(336,-6,o),
(369,11,o),
(399,49,cs),
(429,87,o),
(470,166,o),
(488,201,cs),
(490,205,o),
(491,208,o),
(491,211,cs),
(491,217,o),
(484,227,o),
(477,227,cs),
(473,227,o),
(470,224,o),
(468,220,cs),
(458,201,o),
(427,139,o),
(400,98,cs),
(379,66,o),
(354,40,o),
(335,40,cs),
(326,40,o),
(321,48,o),
(321,65,cs),
(321,103,o),
(345,161,o),
(370,216,cs),
(394,272,o),
(418,325,o),
(418,353,cs),
(418,408,o),
(361,431,o),
(320,431,cs),
(316,431,o),
(314,430,o),
(314,428,cs),
(314,426,o),
(316,424,o),
(317,422,cs),
(318,420,o),
(320,416,o),
(320,408,cs),
(320,394,o),
(313,372,o),
(299,336,cs),
(269,258,o),
(211,150,o),
(178,109,cs),
(169,97,o),
(161,89,o),
(152,89,cs),
(145,89,o),
(140,95,o),
(140,105,cs),
(140,120,o),
(158,160,o),
(179,202,cs),
(209,262,o),
(239,316,o),
(239,355,cs),
(239,402,o),
(190,431,o),
(140,431,cs),
(136,431,o),
(134,430,o),
(134,428,cs),
(134,426,o),
(136,424,o),
(137,422,cs),
(138,420,o),
(139,417,o),
(139,413,cs),
(139,388,o),
(120,344,o),
(111,322,cs),
(81,249,o),
(19,125,o),
(19,68,cs),
(19,17,o),
(56,-2,o),
(90,-2,cs),
(150,-2,o),
(208,99,o),
(225,131,c)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 4 
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 0 23 0 39 0 3 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 0 70 0 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
23 18 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 401;
}
);
metricRight = n;
note = u;
}
