{
color = 11;
glyphname = M.ss04;
lastChange = "2022-04-18 02:42:57 +0000";
layers = (
{
background = {
shapes = (
{
closed = 1;
nodes = (
(850.667,-95.333,o),
(871.333,-89.333,o),
(882,-80,c),
(866,-53.333,o),
(877.333,4.833,o),
(900,73.5,cs),
(911.333,107.833,o),
(925.167,143.667,o),
(941.5,181,cs),
(974.167,255.667,o),
(1009.167,324,o),
(1036.5,376,cs),
(1050.167,402,o),
(1060.333,420.333,o),
(1067,431,cs),
(1103.418,491.697,o),
(1142.042,576.719,o),
(1074,612,cs),
(1035.333,632,o),
(1009,637,o),
(981,617,cs),
(969.85,608.08,o),
(934.407,565.848,o),
(902,527.5,cs),
(862,480.167,o),
(815.333,425,o),
(782,381,cs),
(780.667,379.667,o),
(777.333,376.667,o),
(780,382,cs),
(815.794,448.082,o),
(843.842,528.09,o),
(788,560,cs),
(760.734,575.905,o),
(724.42,563.42,o),
(714,553,c),
(656.667,507.667,o),
(583,423,o),
(511,335,cs),
(509,333,o),
(508.667,333.333,o),
(510,336,cs),
(543.333,385.333,o),
(585.333,442.333,o),
(628,493,cs),
(645.333,513,o),
(646.667,532,o),
(640,548,c),
(626.667,590.667,o),
(581.667,606,o),
(531,610,cs),
(395.822,620.814,o),
(153.101,578.809,o),
(61,484,cs),
(34.333,454.667,o),
(9,415,o),
(9,371,cs),
(9,310.149,o),
(103.624,274.552,o),
(158,286,cs),
(166,288,o),
(169.667,293.333,o),
(169,302,cs),
(169,305.333,o),
(167.333,307,o),
(164,307,cs),
(125.279,310.227,o),
(96,310.512,o),
(96,365,cs),
(96,406.333,o),
(125.667,445,o),
(151,469,cs),
(214.372,529.837,o),
(333.984,568.498,o),
(418,579,cs),
(488.172,587.771,o),
(511.922,575.844,o),
(484,520,cs),
(469.069,490.137,o),
(429.481,423.524,o),
(401.5,372.5,cs),
(384.5,341.5,o),
(367.667,309.333,o),
(351,276,cs),
(317.667,209.333,o),
(294.667,145.333,o),
(288,92,cs),
(284.667,65.333,o),
(288,43.667,o),
(298,27,cs),
(310.667,4.333,o),
(339.667,-7,o),
(385,-7,cs),
(394.333,-7,o),
(397,-4.667,o),
(393,0,cs),
(385.667,8.667,o),
(382,20.333,o),
(382,35,cs),
(382,47,ls),
(383.333,56.333,o),
(384.333,65.333,o),
(387,76,cs),
(418.256,219.259,o),
(607.369,402.891,o),
(704,494,c),
(690.667,471.333,o),
(663.333,413.667,o),
(634,347,cs),
(612.667,297.667,o),
(594,244.5,o),
(582,194.5,cs),
(576,169.5,o),
(572.167,145.833,o),
(570.5,123.5,cs),
(565.571,57.454,o),
(587.542,10,o),
(653,10,cs),
(661,10,o),
(667.167,11.167,o),
(671.5,13.5,cs),
(675.833,15.833,o),
(677.333,19,o),
(676,23,c),
(655.045,57.053,o),
(698.957,168.298,o),
(713,202,cs),
(766.246,320.593,o),
(879.894,458.658,o),
(934,506,c),
(956.817,517.409,o),
(935.863,457.239,o),
(911,410,cs),
(887,364.667,o),
(855.5,299.5,o),
(829.5,229.5,cs),
(816.5,194.5,o),
(805.5,159.5,o),
(796.5,124.5,cs),
(778.5,54.5,o),
(773.833,-5.333,o),
(790.5,-48,cs),
(798.833,-69.333,o),
(814,-83.333,o),
(836,-90,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(861,-92,o),
(874,-87,o),
(882,-80,c),
(877,-71,o),
(875,-59,o),
(875,-45,cs),
(875,-15,o),
(885,27,o),
(900,73.5,cs),
(911.333,107.833,o),
(925.167,143.667,o),
(941.5,181,cs),
(974.167,255.667,o),
(1009.167,324,o),
(1036.5,376,cs),
(1050.167,402,o),
(1060.333,420.333,o),
(1067,431,cs),
(1089,467,o),
(1111,512,o),
(1111,550,cs),
(1111,576,o),
(1101,598,o),
(1074,612,cs),
(1052,623,o),
(1034,630,o),
(1018,630,cs),
(1005,630,o),
(993,626,o),
(981,617,cs),
(969.85,608.08,o),
(934.407,565.848,o),
(902,527.5,cs),
(862,480.167,o),
(815.333,425,o),
(782,381,cs),
(780.667,379.667,o),
(777.333,376.667,o),
(780,382,cs),
(801,421,o),
(820,465,o),
(820,501,cs),
(820,526,o),
(811,547,o),
(788,560,cs),
(779,565,o),
(768,568,o),
(758,568,cs),
(739,568,o),
(721,560,o),
(714,553,c),
(656.667,507.667,o),
(583,423,o),
(511,335,cs),
(509,333,o),
(508.667,333.333,o),
(510,336,cs),
(543.333,385.333,o),
(585.333,442.333,o),
(628,493,cs),
(639,506,o),
(644,518,o),
(644,530,cs),
(644,536,o),
(642,542,o),
(640,548,cs),
(626.667,590.667,o),
(581.667,606,o),
(531,610,cs),
(517,611,o),
(502,612,o),
(486,612,cs),
(348,612,o),
(144,569,o),
(61,484,cs),
(34.333,454.667,o),
(9,415,o),
(9,371,cs),
(9,318,o),
(81,284,o),
(136,284,cs),
(144,284,o),
(151,285,o),
(158,286,cs),
(165,288,o),
(169,293,o),
(169,300,cs),
(169,302,ls),
(169,305.333,o),
(167.333,307,o),
(164,307,cs),
(125.279,310.227,o),
(96,310.512,o),
(96,365,cs),
(96,406.333,o),
(125.667,445,o),
(151,469,cs),
(214.372,529.837,o),
(333.984,568.498,o),
(418,579,cs),
(431,581,o),
(443,581,o),
(453,581,cs),
(481,581,o),
(495,574,o),
(495,556,cs),
(495,547,o),
(492,535,o),
(484,520,cs),
(469.069,490.137,o),
(429.481,423.524,o),
(401.5,372.5,cs),
(384.5,341.5,o),
(367.667,309.333,o),
(351,276,cs),
(317.667,209.333,o),
(294.667,145.333,o),
(288,92,cs),
(287,85,o),
(287,79,o),
(287,73,cs),
(287,55,o),
(290,40,o),
(298,27,cs),
(310.667,4.333,o),
(339.667,-7,o),
(385,-7,cs),
(392,-7,o),
(395,-6,o),
(395,-4,cs),
(395,-3,o),
(394,-1,o),
(393,0,cs),
(385.667,8.667,o),
(382,20.333,o),
(382,35,cs),
(382,47,ls),
(383.333,56.333,o),
(384.333,65.333,o),
(387,76,cs),
(418.256,219.259,o),
(607.369,402.891,o),
(704,494,c),
(690.667,471.333,o),
(663.333,413.667,o),
(634,347,cs),
(612.667,297.667,o),
(594,244.5,o),
(582,194.5,cs),
(574,163,o),
(570,133,o),
(570,106,cs),
(570,49,o),
(593,10,o),
(653,10,cs),
(661,10,o),
(667.167,11.167,o),
(671.5,13.5,cs),
(675,15,o),
(676,18,o),
(676,20,cs),
(676,23,l),
(672,29,o),
(670,38,o),
(670,49,cs),
(670,96,o),
(702,175,o),
(713,202,cs),
(766.246,320.593,o),
(879.894,458.658,o),
(934,506,c),
(941,509,o),
(944,506,o),
(944,499,cs),
(944,482,o),
(928,443,o),
(911,410,cs),
(887,364.667,o),
(855.5,299.5,o),
(829.5,229.5,cs),
(816.5,194.5,o),
(805.5,159.5,o),
(796.5,124.5,cs),
(786,84,o),
(780,47,o),
(780,15,cs),
(780,-9,o),
(783,-30,o),
(790.5,-48,cs),
(798.833,-69.333,o),
(814,-83.333,o),
(836,-90,cs),
(840,-91,o),
(844,-92,o),
(848,-92,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
93 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
93 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
95 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
95 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 990;
}
);
note = M;
}
