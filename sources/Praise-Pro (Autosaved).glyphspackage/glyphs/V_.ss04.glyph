{
color = 11;
glyphname = V.ss04;
lastChange = "2022-04-18 02:42:57 +0000";
layers = (
{
background = {
shapes = (
{
closed = 1;
nodes = (
(376.667,-11.333,o),
(428.5,22,o),
(474.5,70,cs),
(497.5,94,o),
(519.333,121,o),
(540,151,cs),
(581.333,211,o),
(616.667,275.167,o),
(646,334.5,cs),
(685,414,ls),
(694.048,432.095,o),
(727.147,498.532,o),
(745,528.5,cs),
(767.068,565.542,o),
(803.745,616.046,o),
(826,612,cs),
(847.333,609.333,o),
(858.667,614.333,o),
(848,629,cs),
(839.542,640.278,o),
(790.854,655,o),
(770,655,cs),
(709.382,655,o),
(696.853,634.92,o),
(669,582,cs),
(653,550,o),
(618.833,479.333,o),
(579.5,398,cs),
(559.833,357.333,o),
(538.833,315.5,o),
(516.5,272.5,cs),
(471.833,186.5,o),
(429.167,112.5,o),
(392.5,66.5,cs),
(374.167,43.5,o),
(359.333,31.667,o),
(348,31,cs),
(332,29.667,o),
(327,43.333,o),
(327,66,cs),
(327,103.333,o),
(342.667,157.5,o),
(364,215.5,cs),
(374.667,244.5,o),
(386.833,274.5,o),
(400.5,305.5,cs),
(422.167,354.647,o),
(458.014,435.385,o),
(477,479.5,cs),
(488.333,505.833,o),
(497.333,528.667,o),
(504,548,cs),
(518.332,590.997,o),
(500.582,609,o),
(435,609,cs),
(309.301,609,o),
(138.128,574.799,o),
(50,484,cs),
(23.333,454.667,o),
(-2,415,o),
(-2,371,cs),
(-2,310.149,o),
(92.624,274.552,o),
(147,286,cs),
(155,288,o),
(159,293.333,o),
(159,302,cs),
(159,305.333,o),
(157,307,o),
(153,307,cs),
(114.279,310.227,o),
(85,310.512,o),
(85,365,cs),
(85,461.941,o),
(261.589,570,o),
(356,570,cs),
(377.333,570,o),
(378.333,545,o),
(365,513,cs),
(346.461,468.969,o),
(299.391,383.309,o),
(272,322.5,cs),
(238.667,248.5,o),
(211,168.667,o),
(211,90,cs),
(211,20.667,o),
(248.667,-16.667,o),
(322,-14,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(372,-14,o),
(427,20,o),
(474.5,70,cs),
(497.5,94,o),
(519.333,121,o),
(540,151,cs),
(581.333,211,o),
(616.667,275.167,o),
(646,334.5,cs),
(685,414,ls),
(694.048,432.095,o),
(727.147,498.532,o),
(745,528.5,cs),
(767.068,565.542,o),
(803.745,616.046,o),
(826,612,cs),
(842,610,o),
(852,612,o),
(852,619,cs),
(852,622,o),
(851,625,o),
(848,629,cs),
(839.542,640.278,o),
(790.854,655,o),
(770,655,cs),
(709.382,655,o),
(696.853,634.92,o),
(669,582,cs),
(653,550,o),
(618.833,479.333,o),
(579.5,398,cs),
(559.833,357.333,o),
(538.833,315.5,o),
(516.5,272.5,cs),
(471.833,186.5,o),
(429.167,112.5,o),
(392.5,66.5,cs),
(373,42,o),
(357,31,o),
(346,31,cs),
(332,31,o),
(327,44,o),
(327,66,cs),
(327,103.333,o),
(342.667,157.5,o),
(364,215.5,cs),
(374.667,244.5,o),
(386.833,274.5,o),
(400.5,305.5,cs),
(422.167,354.647,o),
(458.014,435.385,o),
(477,479.5,cs),
(488.333,505.833,o),
(497.333,528.667,o),
(504,548,cs),
(507,557,o),
(509,565,o),
(509,572,cs),
(509,598,o),
(487,609,o),
(435,609,cs),
(309.301,609,o),
(138.128,574.799,o),
(50,484,cs),
(23.333,454.667,o),
(-2,415,o),
(-2,371,cs),
(-2,318,o),
(70,284,o),
(125,284,cs),
(133,284,o),
(140,285,o),
(147,286,cs),
(155,288,o),
(159,293.333,o),
(159,302,cs),
(159,305.333,o),
(157,307,o),
(153,307,cs),
(114.279,310.227,o),
(85,310.512,o),
(85,365,cs),
(85,461.941,o),
(261.589,570,o),
(356,570,cs),
(368,570,o),
(374,562,o),
(374,549,cs),
(374,539,o),
(371,527,o),
(365,513,cs),
(346.461,468.969,o),
(299.391,383.309,o),
(272,322.5,cs),
(238.667,248.5,o),
(211,168.667,o),
(211,90,cs),
(211,23,o),
(246,-14,o),
(315,-14,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
70 4 
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 70 23 70 39 70 55 70 71 70 87 70 103 70 119 70 135 70 151 70 167 70 183 70 199 70 215 70 231 70 247 70 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 70 23 70 39 70 3 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 70 70 70 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 614;
}
);
note = V;
}
