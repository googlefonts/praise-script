{
color = 6;
glyphname = fl.ss02;
lastChange = "2022-04-08 20:31:11 +0000";
layers = (
{
background = {
shapes = (
{
closed = 1;
nodes = (
(141,-25,o),
(145,-23,o),
(145,-19,cs),
(145,-17,o),
(145,-15,o),
(143,-13,cs),
(140,-9,o),
(138,-3,o),
(138,6,cs),
(138,32,o),
(153,78,o),
(168,118.5,cs),
(192,183.167,o),
(228,263,o),
(264,331,c),
(308,331,ls),
(313,331,o),
(319,344,o),
(319,350,cs),
(319,352,o),
(319,354,o),
(317,354,cs),
(275,354,l),
(319,445,o),
(352,503,o),
(418,503,cs),
(439,503,o),
(464,497,o),
(493,484,c),
(502,478,o),
(510,486,o),
(510,495,cs),
(510,499,o),
(509,502,o),
(506,506,cs),
(477.505,542.267,o),
(360.072,547,o),
(329,547,cs),
(267.51,547,o),
(239.61,523.633,o),
(207,472,cs),
(196.333,454.667,o),
(170.667,410,o),
(144,354,c),
(124,354,ls),
(114,354,o),
(106,344,o),
(106,337,cs),
(106,333,o),
(108,331,o),
(112,331,cs),
(133,331,l),
(113,287,o),
(92.833,237.667,o),
(77.5,191,cs),
(69.833,167.667,o),
(63.833,145,o),
(59.5,123,cs),
(56,104,o),
(54,86,o),
(54,68,cs),
(54,32,o),
(64,2,o),
(92,-8,cs),
(98.667,-10.667,o),
(106.167,-12.833,o),
(114.5,-14.5,cs),
(122.833,-16.167,o),
(129.667,-18.333,o),
(135,-21,cs)
);
},
{
closed = 1;
nodes = (
(410,-7,o),
(413,-6,o),
(413,-4,cs),
(413,-3,o),
(412,-1,o),
(411,0,cs),
(403.667,8.667,o),
(400,20.333,o),
(400,35,cs),
(400,90.882,o),
(465.948,232.123,o),
(519,329,cs),
(545.667,377,o),
(574.667,422.333,o),
(600,457,cs),
(619.445,483.609,o),
(643.138,513.425,o),
(653,520,cs),
(659,525,o),
(665,530,o),
(665,534,cs),
(665,537,o),
(661,540,o),
(651,542,cs),
(627,546,o),
(606,549,o),
(588,549,cs),
(543,549,o),
(513,533,o),
(482,492,cs),
(395,375,o),
(305,145,o),
(305,69,cs),
(305,15,o),
(335,-7,o),
(403,-7,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(141,-25,o),
(145,-23,o),
(145,-19,cs),
(145,-17,o),
(145,-15,o),
(143,-13,cs),
(140,-9,o),
(138,-3,o),
(138,6,cs),
(138,32,o),
(153,78,o),
(168,118.5,cs),
(192,183.167,o),
(228,263,o),
(264,331,c),
(308,331,ls),
(313,331,o),
(319,344,o),
(319,350,cs),
(319,352,o),
(319,354,o),
(317,354,cs),
(275,354,l),
(319,445,o),
(352,503,o),
(418,503,cs),
(439,503,o),
(464,497,o),
(493,484,c),
(502,478,o),
(510,486,o),
(510,495,cs),
(510,499,o),
(509,502,o),
(506,506,cs),
(477.505,542.267,o),
(360.072,547,o),
(329,547,cs),
(267.51,547,o),
(239.61,523.633,o),
(207,472,cs),
(196.333,454.667,o),
(170.667,410,o),
(144,354,c),
(124,354,ls),
(114,354,o),
(106,344,o),
(106,337,cs),
(106,333,o),
(108,331,o),
(112,331,cs),
(133,331,l),
(113,287,o),
(92.833,237.667,o),
(77.5,191,cs),
(69.833,167.667,o),
(63.833,145,o),
(59.5,123,cs),
(56,104,o),
(54,86,o),
(54,68,cs),
(54,32,o),
(64,2,o),
(92,-8,cs),
(98.667,-10.667,o),
(106.167,-12.833,o),
(114.5,-14.5,cs),
(122.833,-16.167,o),
(129.667,-18.333,o),
(135,-21,cs)
);
},
{
closed = 1;
nodes = (
(410,-7,o),
(413,-6,o),
(413,-4,cs),
(413,-3,o),
(412,-1,o),
(411,0,cs),
(403.667,8.667,o),
(400,20.333,o),
(400,35,cs),
(400,90.882,o),
(465.948,232.123,o),
(519,329,cs),
(545.667,377,o),
(574.667,422.333,o),
(600,457,cs),
(619.445,483.609,o),
(643.138,513.425,o),
(653,520,cs),
(659,525,o),
(665,530,o),
(665,534,cs),
(665,537,o),
(661,540,o),
(651,542,cs),
(627,546,o),
(606,549,o),
(588,549,cs),
(543,549,o),
(513,533,o),
(482,492,cs),
(395,375,o),
(305,145,o),
(305,69,cs),
(305,15,o),
(335,-7,o),
(403,-7,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
58 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 490;
}
);
note = fl;
}
