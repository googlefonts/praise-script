{
color = 11;
glyphname = R.ss01;
lastChange = "2022-04-22 15:06:03 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (462,0);
}
);
background = {
shapes = (
{
closed = 1;
nodes = (
(859,-172,o),
(898,-155,o),
(913,-134,cs),
(918,-127,o),
(920,-122,o),
(920,-118,cs),
(920,-109,o),
(907,-108,o),
(885,-101,cs),
(765,-65,o),
(628,111,o),
(601,227,c),
(730,240,o),
(841,342,o),
(841,469,cs),
(841,525,o),
(817,565,o),
(782,593,cs),
(764,607,o),
(744,618,o),
(722,627,cs),
(662,650,o),
(579,658,o),
(528,658,cs),
(425,658,o),
(314,633,o),
(229,586,cs),
(144,538,o),
(84,468,o),
(84,379,cs),
(84,297,o),
(146,263,o),
(206,263,cs),
(305,263,o),
(379,332,o),
(435,420,cs),
(460,460,o),
(468,498,o),
(468,519,cs),
(468,531,o),
(466,538,o),
(462,538,cs),
(459,538,o),
(455,533,o),
(451,520,cs),
(426,443,o),
(373,360,o),
(292,357,cs),
(249,357,o),
(230,387,o),
(230,423,cs),
(230,496,o),
(285,556,o),
(360,593,cs),
(397,612,o),
(438,625,o),
(481,632,cs),
(503,635,o),
(524,637,o),
(545,637,cs),
(605,637,o),
(657,622,o),
(694,590,cs),
(719,568,o),
(731,538,o),
(731,499,cs),
(731,405,o),
(676,302,o),
(592,264,c),
(582,278,o),
(572,284,o),
(563,284,cs),
(542,284,o),
(525,252,o),
(525,200,cs),
(525,191,o),
(525,182,o),
(526,173,cs),
(543,8,o),
(643,-172,o),
(812,-172,cs)
);
},
{
closed = 1;
nodes = (
(182,-65,o),
(221,-57,o),
(248,-47,cs),
(376,1,o),
(464,132,o),
(517,266,cs),
(527,293,o),
(558,367,o),
(580,409,cs),
(604,456,o),
(643,512,o),
(679,518,cs),
(691,520,o),
(697,527,o),
(697,532,cs),
(697,537,o),
(693,541,o),
(683,541,cs),
(681,541,ls),
(581,529,o),
(502,448,o),
(406,295,cs),
(388,266,o),
(356,208,o),
(335,171,cs),
(321,148,o),
(306,125,o),
(290,102,cs),
(258,56,o),
(223,18,o),
(184,-5,cs),
(165,-16,o),
(145,-22,o),
(124,-22,cs),
(98,-22,o),
(69,-8,o),
(74,26,cs),
(82,96,o),
(167,153,o),
(243,158,cs),
(261,159,o),
(271,166,o),
(271,171,cs),
(271,176,o),
(264,180,o),
(248,180,cs),
(168,180,o),
(43,107,o),
(40,23,cs),
(35,-41,o),
(85,-65,o),
(146,-65,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(859,-172,o),
(897,-155,o),
(913,-134,cs),
(919,-126,o),
(920,-122,o),
(920,-118,cs),
(920,-112,o),
(914,-110,o),
(904,-107,cs),
(713,-44,o),
(614,167,o),
(601,227,c),
(730,240,o),
(841,342,o),
(841,469,cs),
(841,613,o),
(682,658,o),
(528,658,cs),
(291,658,o),
(84,540,o),
(84,379,cs),
(84,309,o),
(132,263,o),
(210,263,cs),
(280,263,o),
(344,304,o),
(394,364,cs),
(443,422,o),
(468,477,o),
(468,520,cs),
(468,532,o),
(465,535,o),
(461,535,cs),
(456,535,o),
(454,529,o),
(451,520,cs),
(438,481,o),
(419,440,o),
(389,407,cs),
(362,378,o),
(330,357,o),
(291,357,cs),
(248,357,o),
(230,387,o),
(230,423,cs),
(230,560,o),
(413,637,o),
(545,637,cs),
(667,637,o),
(731,577,o),
(731,506,cs),
(731,402,o),
(676,302,o),
(592,264,c),
(583,277,o),
(573,284,o),
(563,284,cs),
(543,284,o),
(525,253,o),
(525,200,cs),
(525,51,o),
(625,-172,o),
(812,-172,cs)
);
},
{
closed = 1;
nodes = (
(315,-65,o),
(443,79,o),
(517,266,cs),
(582,431,o),
(622,490,o),
(670,516,cs),
(685,524,o),
(698,526,o),
(698,533,cs),
(698,538,o),
(694,541,o),
(683,541,cs),
(602,541,o),
(503,455,o),
(406,295,cs),
(343,191,o),
(246,-22,o),
(124,-22,cs),
(95,-22,o),
(75,-9,o),
(75,19,cs),
(75,89,o),
(174,149,o),
(247,158,cs),
(262,160,o),
(271,164,o),
(271,171,cs),
(271,177,o),
(264,180,o),
(248,180,cs),
(158,180,o),
(40,102,o),
(40,18,cs),
(40,-37,o),
(76,-65,o),
(146,-65,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
41 78 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
16 7 113 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 27 values pushed */
6 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 41 229 41 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 11 values pushed */
9 113 25 113 41 113 57 113 73 113 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
124 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 780;
}
);
note = R;
}
