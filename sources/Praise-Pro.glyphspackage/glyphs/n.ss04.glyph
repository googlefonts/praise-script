{
color = 1;
glyphname = n.ss04;
kernLeft = _n;
kernRight = _n;
layers = (
{
anchors = (
{
name = bottom;
pos = (207,0);
},
{
name = top;
pos = (338,425);
}
);
background = {
anchors = (
{
name = bottom;
pos = (207,0);
},
{
name = top;
pos = (338,425);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(193,244,l),
(211,275,o),
(239,318,o),
(239,355,cs),
(239,379,o),
(226,397,o),
(208,410,cs),
(190,423,o),
(159,431,o),
(139,431,cs),
(136,431,o),
(134,430,o),
(134,428,cs),
(134,426,o),
(136,424,o),
(138,419,cs),
(139,416,o),
(140,412,o),
(140,406,cs),
(140,369,o),
(102,296,o),
(90,270,cs),
(58,201,o),
(16,116,o),
(16,71,cs),
(16,50,o),
(24,28,o),
(45,17,cs),
(67,5,o),
(108,-6,o),
(120,-6,cs),
(123,-6,o),
(124,-4,o),
(124,-2,cs),
(124,0,o),
(122,2,o),
(120,5,cs),
(116,11,o),
(115,16,o),
(115,25,cs),
(115,114,o),
(274,311,o),
(291,328,c),
(293,327,l),
(250,244,o),
(222,156,o),
(222,85,cs),
(222,24,o),
(251,-8,o),
(308,-8,cs),
(344,-8,o),
(370,20,o),
(397,55,cs),
(434,102,o),
(466,165,o),
(484,201,cs),
(486,205,o),
(487,208,o),
(487,211,cs),
(487,217,o),
(480,227,o),
(473,227,cs),
(469,227,o),
(466,224,o),
(464,220,cs),
(454,201,o),
(425,144,o),
(396,101,cs),
(373,67,o),
(352,40,o),
(336,40,cs),
(326,40,o),
(321,49,o),
(321,63,cs),
(321,94,o),
(347,183,o),
(404,293,cs),
(420,324,o),
(431,350,o),
(431,376,cs),
(431,410,o),
(405,434,o),
(370,434,cs),
(359,434,o),
(349,432,o),
(340,428,cs),
(320,419,o),
(252,325,o),
(195,242,c)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
28 6 34 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 11 values pushed */
6 28 22 28 38 28 54 28 70 28 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
18 6 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
54 6 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
69 4 
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 69 23 69 39 69 3 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 69 70 69 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 397;
}
);
metricRight = n;
note = n;
}
