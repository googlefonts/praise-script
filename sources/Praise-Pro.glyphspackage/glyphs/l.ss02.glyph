{
glyphname = l.ss02;
kernLeft = _l_ss02;
kernRight = _l_ss02;
layers = (
{
anchors = (
{
name = bottom;
pos = (100,0);
},
{
name = center;
pos = (113,273);
},
{
name = top;
pos = (360,545);
},
{
name = topright;
pos = (402,545);
}
);
background = {
shapes = (
{
closed = 1;
nodes = (
(149,-7,o),
(153,-6,o),
(156,-4,cs),
(158,-1,o),
(158,1,o),
(155,3,cs),
(144,11,o),
(141,30,o),
(141,50,cs),
(141,125,o),
(175,220,o),
(219,305,cs),
(263,390,o),
(317,467,o),
(356,506,cs),
(364,514,o),
(375,521,o),
(380,521,cs),
(386,521,o),
(390,523,o),
(390,527,cs),
(390,529,ls),
(389,534,o),
(381,540,o),
(367,545,cs),
(359,548,o),
(345,550,o),
(328,550,cs),
(318,550,o),
(306,549,o),
(295,547,cs),
(221,534,o),
(152,407,o),
(117,342,cs),
(76,266,o),
(35,167,o),
(35,93,cs),
(35,73,o),
(38,55,o),
(45,40,cs),
(60,9,o),
(88,-7,o),
(144,-7,cs)
);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(249,369,o),
(349,521,o),
(381,521,cs),
(387,521,o),
(390,523,o),
(390,527,cs),
(390,538,o),
(365,550,o),
(326,550,cs),
(302,550,o),
(284,546,o),
(267,537,cs),
(179,492,o),
(35,216,o),
(35,96,cs),
(35,61,o),
(43,35,o),
(61,18,cs),
(78,1,o),
(103,-7,o),
(137,-7,cs),
(149,-7,o),
(156,-4,o),
(156,0,cs),
(156,5,o),
(150,5,o),
(145,18,cs),
(141,28,o),
(140,38,o),
(140,50,cs),
(140,91,o),
(153,169,o),
(211,290,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 183 0 199 0 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
214 0 230 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 215;
}
);
note = l;
}
