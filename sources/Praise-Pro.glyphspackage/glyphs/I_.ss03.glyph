{
color = 3;
glyphname = I.ss03;
kernLeft = _I_ss03;
kernRight = _I_ss03;
layers = (
{
anchors = (
{
name = bottom;
pos = (160,-60);
},
{
name = ogonek;
pos = (193,-36);
},
{
name = top;
pos = (481,600);
},
{
name = topleft;
pos = (45,600);
}
);
background = {
anchors = (
{
name = bottom;
pos = (160,-60);
},
{
name = ogonek;
pos = (193,-36);
},
{
name = top;
pos = (481,600);
},
{
name = topleft;
pos = (45,600);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(134,25,l),
(115,26,o),
(95,28,o),
(78,28,cs),
(25,28,o),
(-10,15,o),
(-10,-32,cs),
(-10,-39,o),
(-9,-47,o),
(-7,-56,c),
(-7,-56,o),
(-6,-56,o),
(-6,-56,c),
(18,-39,o),
(105,-19,o),
(139,-22,c)
);
},
{
closed = 1;
nodes = (
(536,544,cs),
(585,544,o),
(615,550,o),
(639,562,cs),
(649,567,o),
(652,574,o),
(652,578,cs),
(652,582,o),
(650,584,o),
(644,584,cs),
(587,584,o),
(555,587,o),
(515,595,cs),
(483,601,o),
(365,633,o),
(289,633,cs),
(200,633,o),
(154,598,o),
(154,540,cs),
(154,533,o),
(155,525,o),
(156,520,c),
(157,520,l),
(194,543,o),
(271,551,o),
(340,551,cs),
(413,551,o),
(476,544,o)
);
},
{
closed = 1;
nodes = (
(509,540,cs),
(509,557,o),
(417,559,o),
(385,553,cs),
(356,547,o),
(326,523,o),
(299,489,cs),
(261,442,o),
(221,367,o),
(189,289,cs),
(148,187,o),
(120,82,o),
(120,37,cs),
(120,-42,o),
(152,-75,o),
(228,-75,cs),
(265,-75,o),
(301,-64,o),
(330,-47,cs),
(349,-36,o),
(354,-30,o),
(354,-23,cs),
(354,-16,o),
(351,-12,o),
(340,-10,cs),
(312,-5,o),
(267,1,o),
(234,6,c),
(234,46,o),
(254,109,o),
(284,179,cs),
(331,291,o),
(403,418,o),
(458,487,cs),
(475,508,o),
(490,524,o),
(502,532,cs),
(505,534,o),
(509,536,o)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
62 1 47 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
30 22 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = I;
}
