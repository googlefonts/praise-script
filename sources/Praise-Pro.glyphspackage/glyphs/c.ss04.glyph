{
color = 1;
glyphname = c.ss04;
kernLeft = _o;
kernRight = _e;
layers = (
{
anchors = (
{
name = bottom;
pos = (167,0);
},
{
name = top;
pos = (300,425);
}
);
background = {
anchors = (
{
name = bottom;
pos = (167,0);
},
{
name = top;
pos = (300,425);
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(314,-15,o),
(379,116,o),
(422,201,cs),
(424,205,o),
(425,208,o),
(425,211,cs),
(425,217,o),
(418,227,o),
(411,227,cs),
(407,227,o),
(402,219,o),
(400,215,cs),
(364,146,o),
(295,22,o),
(216,22,cs),
(180,22,o),
(164,42,o),
(164,88,cs),
(164,158,o),
(226,309,o),
(285,382,cs),
(293,392,o),
(302,399,o),
(308,399,cs),
(314,399,o),
(317,395,o),
(317,384,cs),
(317,355,o),
(292,307,o),
(279,283,cs),
(272,270,o),
(269,262,o),
(269,255,cs),
(269,239,o),
(281,229,o),
(299,229,cs),
(343,228,o),
(395,293,o),
(395,347,cs),
(395,398,o),
(359,428,o),
(289,428,cs),
(211,428,o),
(156,389,o),
(113,323,cs),
(74,264,o),
(40,177,o),
(40,103,cs),
(40,25,o),
(85,-15,o),
(178,-15,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
48 3 
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 48 23 48 39 48 55 48 71 48 87 48 103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 48 23 48 39 48 55 48 71 48 87 48 103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 27 values pushed */
7 48 23 48 39 48 55 48 71 48 87 48 103 48 119 48 135 48 151 48 167 48 183 48 199 48 13 
DELTAP3[ ]	/* DeltaExceptionP3 */
NPUSHW[ ]	/* 5 values pushed */
214 48 230 48 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 335;
}
);
metricRight = n;
note = c;
}
