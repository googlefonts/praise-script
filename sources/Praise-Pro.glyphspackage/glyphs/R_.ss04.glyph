{
color = 3;
glyphname = R.ss04;
kernLeft = _R_ss04;
kernRight = _R_ss04;
layers = (
{
anchors = (
{
name = bottom;
pos = (446,20);
},
{
name = top;
pos = (633,620);
}
);
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(450,254,l),
(463,173,o),
(511,-67,o),
(631,-67,cs),
(679,-67,o),
(731,-9,o),
(731,4,cs),
(731,6,o),
(730,8,o),
(727,8,cs),
(725,8,o),
(723,7,o),
(719,7,cs),
(695,7,o),
(652,55,o),
(614,110,c),
(573,171,o),
(535,241,o),
(528,258,c)
);
},
{
closed = 1;
nodes = (
(325,32,o),
(378,156,o),
(439,279,cs),
(492,385,o),
(551,476,o),
(586,520,cs),
(605,544,o),
(617,545,o),
(617,553,cs),
(617,563,o),
(596,570,o),
(548,570,cs),
(486,570,o),
(448,548,o),
(414,493,cs),
(318,335,o),
(228,119,o),
(228,35,cs),
(228,-2,o),
(241,-17,o),
(254,-28,cs),
(278,-47,o),
(317,-53,o),
(329,-53,cs),
(332,-53,o),
(334,-52,o),
(334,-49,cs),
(334,-46,o),
(331,-44,o),
(329,-40,cs),
(326,-34,o),
(325,-30,o),
(325,-21,cs)
);
},
{
closed = 1;
nodes = (
(90,337,o),
(154,304,o),
(216,304,cs),
(242,304,o),
(250,308,o),
(250,321,cs),
(250,325,o),
(249,327,o),
(244,327,cs),
(238,327,o),
(218,328,o),
(205,333,cs),
(186,340,o),
(177,355,o),
(177,385,cs),
(177,436,o),
(225,496,o),
(298,538,cs),
(373,582,o),
(469,603,o),
(549,603,cs),
(621,603,o),
(650,569,o),
(650,514,cs),
(650,416,o),
(541,261,o),
(477,261,cs),
(454,261,o),
(443,277,o),
(445,320,c),
(423,285,l),
(435,226,o),
(467,217,o),
(508,217,cs),
(612,217,o),
(798,392,o),
(798,505,cs),
(798,583,o),
(717,631,o),
(553,631,cs),
(459,631,o),
(342,608,o),
(258,574,cs),
(153,531,o),
(90,465,o),
(90,398,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
60 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
77 60 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 728;
}
);
note = R;
}
