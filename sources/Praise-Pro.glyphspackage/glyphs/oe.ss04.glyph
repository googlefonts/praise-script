{
glyphname = oe.ss04;
kernLeft = _o;
kernRight = _e;
layers = (
{
background = {
shapes = (
{
closed = 1;
nodes = (
(463.288,-15,o),
(509.498,18.234,o),
(560,90,cs),
(585.333,127.333,o),
(606.333,165.333,o),
(625,204,cs),
(632.383,218.765,o),
(609.192,230.385,o),
(602,216,cs),
(594.183,195.156,o),
(560.912,133.781,o),
(537,99,cs),
(506.004,54.443,o),
(452.156,19.379,o),
(409.5,22.5,cs),
(382.167,24.5,o),
(366,45.167,o),
(366,88.5,cs),
(366,110.167,o),
(372,138.333,o),
(384,173,c),
(481.879,180.936,o),
(596,271.801,o),
(596,359,cs),
(596,416.198,o),
(532.262,430,o),
(480,430,cs),
(452,430,o),
(428.667,423,o),
(406,411,c),
(383.333,429.667,o),
(348,433,o),
(312,433,cs),
(261.333,433,o),
(214,410.667,o),
(174,376,cs),
(154,358.667,o),
(135.667,338.667,o),
(119,316,cs),
(85.667,270.667,o),
(61.167,219.833,o),
(48.5,168.5,cs),
(42.167,142.833,o),
(39,118.333,o),
(39,95,cs),
(39,15,o),
(91,-7,o),
(175,-7,cs),
(205.667,-7,o),
(237,5.333,o),
(265,28,c),
(285,1.333,o),
(322,-15,o),
(382,-15,cs)
);
},
{
closed = 1;
nodes = (
(138.669,20,o),
(156.088,78.607,o),
(167.5,111.5,cs),
(180.216,148.152,o),
(206.28,210.38,o),
(215,230,cs),
(236.793,279.812,o),
(298.669,411,o),
(323,411,c),
(341.569,408.937,o),
(324.853,357.672,o),
(311,321.5,cs),
(297.053,285.082,o),
(273.173,235.404,o),
(264,214,cs),
(242.617,166.958,o),
(176.403,20,o),
(156,20,cs)
);
},
{
closed = 1;
nodes = (
(402,220,ls),
(415.222,251.733,o),
(458.661,346.605,o),
(489,382,cs),
(511.667,408.667,o),
(528,396.333,o),
(520,359,cs),
(504,287,o),
(454,223.667,o),
(394,201,c)
);
},
{
ref = o.ss04;
},
{
alignment = -1;
pos = (199,0);
ref = e.ss04;
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
ref = oe.ss01;
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
24 2 27 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
69 2 
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 27 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 13 
DELTAP3[ ]	/* DeltaExceptionP3 */
NPUSHW[ ]	/* 5 values pushed */
214 69 230 69 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 544;
}
);
metricRight = e.ss04;
note = oe;
}
