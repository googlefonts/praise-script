{
color = 1;
glyphname = o.ss02;
kernLeft = _o;
kernRight = _e_ss02;
layers = (
{
anchors = (
{
name = bottom;
pos = (125,0);
},
{
name = center;
pos = (210,213);
},
{
name = ogonek;
pos = (160,10);
},
{
name = top;
pos = (329,425);
},
{
name = topright;
pos = (353,425);
}
);
background = {
anchors = (
{
name = bottom;
pos = (125,0);
},
{
name = center;
pos = (210,213);
},
{
name = ogonek;
pos = (160,10);
},
{
name = top;
pos = (329,425);
},
{
name = topright;
pos = (353,425);
}
);
};
guides = (
{
pos = (300,-6);
}
);
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(140,24,o),
(137,31,o),
(137,43,cs),
(137,80,o),
(167,166,o),
(192,223,cs),
(224,298,o),
(284,406,o),
(307,406,cs),
(314,406,o),
(317,400,o),
(317,389,cs),
(317,348,o),
(272,242,o),
(261,220,cs),
(219,125,o),
(169,24,o),
(147,24,cs)
);
},
{
closed = 1;
nodes = (
(247,-7,o),
(316,77,o),
(360,159,cs),
(399,231,o),
(421,305,o),
(421,351,cs),
(421,406,o),
(390,433,o),
(314,433,cs),
(304,433,ls),
(151,433,o),
(30,236,o),
(30,95,cs),
(30,18,o),
(77,-7,o),
(156,-7,cs),
(159,-7,o),
(163,-7,o),
(166,-7,cs)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 30 23 30 39 30 55 30 71 30 87 30 103 30 119 30 135 30 151 30 167 30 183 30 199 30 215 30 231 30 247 30 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 30 23 30 39 30 55 30 71 30 87 30 103 30 119 30 135 30 151 30 167 30 183 30 199 30 215 30 231 30 247 30 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 15 values pushed */
7 30 23 30 39 30 55 30 71 30 87 30 103 30 7 
DELTAP3[ ]	/* DeltaExceptionP3 */
NPUSHW[ ]	/* 5 values pushed */
118 30 134 30 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 396;
}
);
metricLeft = o;
note = o;
}
