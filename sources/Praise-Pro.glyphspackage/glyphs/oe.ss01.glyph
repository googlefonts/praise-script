{
glyphname = oe.ss01;
kernLeft = _o;
kernRight = _e;
layers = (
{
anchors = (
{
name = bottom;
pos = (125,0);
},
{
name = center;
pos = (195,213);
},
{
name = ogonek;
pos = (137,10);
},
{
name = top;
pos = (324,425);
},
{
name = topright;
pos = (370,425);
}
);
background = {
anchors = (
{
name = topright;
pos = (161,419);
}
);
shapes = (
{
pos = (-10,0);
ref = o.ss01;
}
);
};
layerId = "C623C401-2266-4A98-B253-3D45160C29C7";
shapes = (
{
closed = 1;
nodes = (
(454,-15,o),
(500,11,o),
(536,50,cs),
(575,91,o),
(604,147,o),
(631,201,cs),
(633,205,o),
(634,208,o),
(634,211,cs),
(634,217,o),
(627,227,o),
(620,227,cs),
(616,227,o),
(613,224,o),
(611,220,cs),
(583,167,o),
(555,108,o),
(515,68,cs),
(488,42,o),
(456,24,o),
(415,24,cs),
(385,24,o),
(363,42,o),
(363,86,cs),
(363,114,o),
(370,139,o),
(382,172,c),
(471,179,o),
(547,229,o),
(585,301,cs),
(599,327,o),
(606,348,o),
(606,366,cs),
(606,406,o),
(570,432,o),
(514,432,cs),
(508,432,o),
(504,432,o),
(497,432,cs),
(374,432,o),
(252,234,o),
(252,105,cs),
(252,26,o),
(301,-15,o),
(390,-15,cs)
);
},
{
closed = 1;
nodes = (
(294,-7,o),
(391,208,o),
(393,354,cs),
(394,403,o),
(357,433,o),
(305,433,cs),
(152,433,o),
(30,229,o),
(30,98,cs),
(30,25,o),
(77,-7,o),
(141,-7,cs)
);
},
{
closed = 1;
nodes = (
(154,27,o),
(150,37,o),
(150,53,cs),
(149,86,o),
(170,154,o),
(198,221,cs),
(218,268,o),
(241,314,o),
(262,346,cs),
(290,389,o),
(307,409,o),
(319,409,cs),
(326,409,o),
(328,404,o),
(328,393,cs),
(328,370,o),
(302,296,o),
(272,220,cs),
(234,125,o),
(189,27,o),
(162,27,cs)
);
},
{
closed = 1;
nodes = (
(416,251,o),
(457,344,o),
(490,382,cs),
(498,392,o),
(505,396,o),
(511,396,cs),
(518,396,o),
(523,389,o),
(523,376,cs),
(523,327,o),
(474,230,o),
(395,201,c)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 2 
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 35 23 35 39 35 55 35 71 35 87 35 103 35 119 35 135 35 151 35 167 35 183 35 199 35 215 35 231 35 247 35 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 31 values pushed */
7 35 23 35 39 35 55 35 71 35 87 35 103 35 119 35 135 35 151 35 167 35 183 35 199 35 215 35 231 35 15 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 3 values pushed */
246 35 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 3 values pushed */
6 35 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 544;
}
);
metricLeft = o;
metricRight = e;
note = oe;
}
